import { LanguageProvider } from "@inlang/paraglide-next"
import { AvailableLanguageTag, languageTag } from "@/paraglide/runtime.js"
import * as m from "@/paraglide/messages.js"

// import type { Metadata } from "next";
import { Geist, Geist_Mono, Vazirmatn } from "next/font/google";
import "./globals.css";
import { Header } from "./components/header";
import { Footer } from "./components/footer";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
const vazirmatnSans = Vazirmatn({
  variable: "--font-vazirmatn-sans",
  subsets: ["arabic"],
});
export async function generateMetadata() {
  return {
    title: m.home_metadata_title(),
    description: m.home_metadata_description(),
  }
}
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };
// This is type-safe & forces you to keep it up-to-date
const direction: Record<AvailableLanguageTag, "rtl" | "ltr"> = {
  en: "ltr",
  fa: "rtl",
}
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <LanguageProvider>
      <html lang={languageTag()}>
        <body
          className={`${geistSans.variable} ${geistMono.variable} ${vazirmatnSans.variable}  antialiased min-h-screen text-center`}
          dir={direction[languageTag()]}
        >
          <Header />
          {children}
          <Footer />
        </body>
      </html>
    </LanguageProvider>
  );
}
